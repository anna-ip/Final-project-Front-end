{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/anna/Desktop/Technigo/week21/Final-project-Front-end/App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: white;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Routes from \"./Components/Routes/Routes\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\nimport { NativeRouter, Switch } from \"react-router-native\";\nimport styled from \"styled-components/native\";\n\nvar App = function App() {\n  return React.createElement(NativeRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    }\n  }, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    }\n  }))));\n};\n\nvar Container = styled.View(_templateObject());\nexport default App;","map":{"version":3,"sources":["/Users/anna/Desktop/Technigo/week21/Final-project-Front-end/App.js"],"names":["React","useState","Routes","ErrorBoundary","NativeRouter","Switch","styled","App","Container","View"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP;;;;;AAEA,OAAOC,aAAP;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,qBAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAmBA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAWhB,SAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAFF;AAWD,CAtBD;;AAwBA,IAAMC,SAAS,GAAGF,MAAM,CAACG,IAAV,mBAAf;AAOA,eAAeF,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Routes from \"./Components/Routes/Routes\";\nimport { StyleSheet, Text, SafeAreaView, View } from \"react-native\";\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\nimport { NativeRouter, Switch } from \"react-router-native\";\nimport styled from \"styled-components/native\";\n\n// import * as Font from 'expo-font';\n// import { AppLoading } from 'expo';\n// import { startAsync } from \"expo/build/AR\";\n\n// const fetchFonts = () => {\n//   return Font.loadAsync({\n//     'Eczar-bold': require('./Components/assets/Fonts/Eczar/Eczar-Bold.ttf'),\n//     'Eczar-regular': require('./Components/assets/Fonts/Eczar/Eczar-Regular.ttf')\n//   });\n// };\n\n\n\n\n\n//Native Router can only have one child\n//Switch makes sure only one page render at a time\nconst App = () => {\n  // const [dataLoaded, setDataLoaded] = useState(false);\n\n  // if (!dataLoaded) {\n  //   return (\n  //     <AppLoading\n  //       startAsync={fetchFonts}\n  //       onFinish={() => setDataLoaded(true)}\n  //     />\n  //   )\n  // }\n  return (\n\n    <NativeRouter>\n      <Container>\n        <Switch>\n          <Routes />\n        </Switch>\n      </Container>\n    </NativeRouter>\n\n  );\n};\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: white;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}